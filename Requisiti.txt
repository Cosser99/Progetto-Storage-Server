

L'obiettivo dell'esercizio è creare un server di storage con API CRUD e un sistema di login utilizzando Node.js e il framework Fastify.

Il server deve essere in grado di salvare i dati in un file JSON sul file system e autenticare gli utenti attraverso un token JWT. 

In particolare, i passi sono :

- Creare un progetto Node.js

- Installare Fastify e jsonwebtoken con "npm install fastify jsonwebtoken"

- Definire gli endpoint API utilizzando i metodi appropriati di Fastify

- Utilizzare il modulo "fs" di Node.js per scrivere e leggere dati dal file JSON

- Implementare la logica di autenticazione e generazione del token JWT nel endpoint di login

- Implementare la logica di validazione del token JWT nei endpoint di CRUD

- Implementare la logica di validazione per i dati

- Testare il server con un client HTTP come Postman o curl



Il server deve avere i seguenti endpoint principali:

POST /login - autentica l'utente e restituisce un token JWT

POST /data - crea un nuovo dato (richiede il token JWT)

GET /data/:id - recupera un dato specifico dato il suo ID (richiede il token JWT)

PUT /data/:id - aggiorna un dato esistente dato il suo ID (richiede il token JWT)

DELETE /data/:id - elimina un dato esistente dato il suo ID (richiede il token JWT)



Il formato dei dati è un oggetto JSON con "id" (un identificatore univoco) e "data" (i dati da salvare).



Inoltre prima di iniziare ti consigliamo di dare una lettura a queste risorse molto utili:

https://eloquentjavascript.net/

https://nodejs.dev/en/learn/introduction-to-nodejs/

https://www.fastify.io/docs/latest/Guides/Getting-Started/

https://blog.stoplight.io/crud-api-design



Dopo aver completato l'esercizio, inviaci il codice sorgente su GitHub o come archivio zip.

In bocca al lupo e non esitare a contattarci se hai domande!